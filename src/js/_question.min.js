Vue.component("right-panel",{props:["rightData","progressData","leftData"],template:'<div class="right-panel-wrapper">\n  <div class="right-panel clearfix">\n    <progress-panel ref="prsPanel" :right-data="rightData" :progress-data="progressData"></progress-panel>\n    <div class="survey-wrapper"> \n      <div class="scrollable">   \n      <div class="accordian-inner" v-for="(category,catIn) in rightData.categories">\n        <h2 class="accordion active" @click="openAccordion($event)" v-html=\'category.heading\'></h2>\n        <div class="accordion-panel" >\n          <div class="accordion-resize" >\n            <div v-for="(subCategory,subCatIn) in category.subCategories">\n            <div class="survey-title"  v-if="subCategory.subHeading" v-html=\'subCategory.subHeading\'></div>\n            <div\n              v-for="(question, quesInd) in subCategory.questions"\n              class="question-resize"\n            >\n              <div class="survey-info">\n                <span class="survey-info-messg" v-html=\'question.quesText\'></span>\n                <span class="instruct-info"  v-if="question.quesDescription">                 \n                  <span class="" v-html=\'question.quesDescription\'></span>\n                </span>\n              </div>\n              <div id="errorDiv" class="error-message" v-html="rightData.errorMessage"></div>\n              <div class="survey-type">\n                <div class="survey-row" :data-id="catIn+\'_\'+subCatIn+\'_\'+quesInd">\n                  <div\n                    class="s-col"\n                    v-for="(option, index) in question.options"\n                  >\n                    <div class="survey-card" :data_id="option.optionsId" \n                    :class="{selectedsurvey:question.selected==option.optionsId}" @click="handleAnswerSelect(option.optionsId,catIn,subCatIn, quesInd)">\n                      <div class="s-crad-header" v-html=\'rightData.ratingTxt[index]\'></div>\n                      <div class="s-crad-body" v-html=\'option.optionText\'></div>\n                    </div>\n                  </div>\n                </div>\n                <div class="ctrl-sm-chk">\n                  <div class="catg-selection">\n                      <div class="pure-radiobutton">\n                        <input :checked="question.selected == question.naId" :id="\'cus_\'+question.naId" :name="\'cus_\'+question.naId" type="radio" value="3" class="radio" />                               \n                        <label @click="handleAnswerSelect(question.naId,catIn,subCatIn, quesInd)" :for="\'cus_\'+question.naId" v-html="rightData.naText">Hello</label>\n                     </div>\n                  </div> \n               </div>\n                <div class="other-type-row">\n                  <div class="other-quest" v-html=\'rightData.cmntHeding\'></div>\n                  <div class="other-form" style="display:none">\n                    <input\n                      type="text"\n                      class="other-form-ctrl"\n                      :placeholder="rightData.cmntPlaceHolder"\n                      :value="question.detailVal"\n                      @input="handleKeyDown(catIn,subCatIn,quesInd,question.detailId,$event)"\n                    />\n                  </div>\n                </div>\n                <div class="survey-type-overlay" v-if="rightData.readdOnly"></div>\n              </div>\n            </div>\n            </div>\n          </div>\n          </div>\n        </div>\n      </div>\n      </div>\n      </div>\n    </div>\n  </div>\n</div>',mounted:function(){this.setHeight(),window.addEventListener("resize",this.setHeight),document.addEventListener("DOMContentLoaded",()=>{var instance=OverlayScrollbars(document.querySelector(".scrollable"),{});let scrollHeight=this.rightData.scrollPosition;""==scrollHeight&&(scrollHeight=0),instance.scroll({x:0,y:scrollHeight},100)})},methods:{openAccordion:function(e){e.stopPropagation(),-1==e.target.className.split(" ").indexOf("active")?(e.target.className+=" active",e.target.nextElementSibling.style.maxHeight=e.target.nextElementSibling.scrollHeight+"px"):(e.target.className=e.target.className.replace(" active",""),e.target.nextElementSibling.style.maxHeight=null),this.checkgroupUngroup()},handleKeyDown:function(catIn,subCatIn,quesInd,ques_id,e){this.rightData.categories[catIn].subCategories[subCatIn].questions[quesInd].detailVal=e.target.value,document.getElementById(ques_id)&&(document.getElementById(ques_id).value=e.target.value.replace(/\n/g,"\\n").replace(/'/g,"'").replace(/"/g,'\\"'))},handleAnswerSelect:function(dataId,catIn,subCatIn,quesInd){this.rightData.categories[catIn].subCategories[subCatIn].questions[quesInd].selected=dataId,document.getElementById("errorDiv").style.visibility="hidden",document.getElementById(dataId)&&document.getElementById(dataId).click();let ttlAttempt=0;for(let category of this.rightData.categories)for(let subCat of category.subCategories)for(let question of subCat.questions)""!=question.selected&&ttlAttempt++;this.$parent.updateLeftQuestionAttempt(ttlAttempt),this.$parent.getTotalQuestions()},setHeight:function(){Object.entries||(Object.entries=function(obj){for(var ownProps=Object.keys(obj),i=ownProps.length,resArray=new Array(i);i--;)resArray[i]=[ownProps[i],obj[ownProps[i]]];return resArray});for(var surRows=document.getElementsByClassName("survey-row"),i=0;i<surRows.length;i++){for(var headHght=0,bodyHght=0,j=0;j<surRows[i].children.length;j++){let srvyCard=surRows[i].children[j].children[0];srvyCard.children[0].setAttribute("style","height:auto"),srvyCard.children[1].setAttribute("style","height:auto");let sCradHeaderHght=srvyCard.children[0].offsetHeight,sCradBodyHght=srvyCard.children[1].offsetHeight;headHght<sCradHeaderHght&&(headHght=sCradHeaderHght),bodyHght<sCradBodyHght&&(bodyHght=sCradBodyHght)}let rowHeaders=surRows[i].getElementsByClassName("s-crad-header"),rowBodies=surRows[i].getElementsByClassName("s-crad-body"),rowHeadersArr=[],rowBodiesArr=[];for(var k=0;k<rowHeaders.length;k++)rowHeadersArr.push(rowHeaders[k]);for(var l=0;l<rowBodies.length;l++)rowBodiesArr.push(rowBodies[l]);rowHeadersArr.map(el=>{el.setAttribute("style","height:"+headHght+"px")}),rowBodiesArr.map(el=>{el.setAttribute("style","height:"+bodyHght+"px")})}},enabDisSubmit:function(endis){this.$refs.prsPanel.enabDisSubmit(endis)},toltiptoggle:e=>{e.target.parentNode.classList.contains("tooltip-show")?e.target.parentNode.classList.remove("tooltip-show"):e.target.parentNode.classList.add("tooltip-show")},setScrollHeight:()=>{let instance,scrollHeight=OverlayScrollbars(document.querySelector(".scrollable"),{}).scroll().position.y;document.getElementById("scroll-value").value=scrollHeight},updateprsbar:function(totalAnswered,totalQuestions){this.$refs.prsPanel.updateProgresbar(totalAnswered,totalQuestions)},groupQuestions:function(){document.querySelectorAll(".accordion").forEach((element,index)=>{element.classList.remove("active"),element.nextElementSibling.style.maxHeight=null}),this.checkgroupUngroup()},ungroupQuestions:function(){document.querySelectorAll(".accordion").forEach((element,index)=>{element.classList.add("active"),element.nextElementSibling.style.maxHeight=element.nextElementSibling.scrollHeight+"px"}),this.checkgroupUngroup()},checkgroupUngroup:function(){let grouped=!0;document.querySelectorAll(".accordion").forEach((element,index)=>{element.classList.contains("active")&&(grouped=!1),this.$refs.prsPanel.udpdateGroupInfo(grouped)})},updateSubmitinFooter:function(totalAnswered,totalQuestions){this.$parent.updateSubmitinFooter(totalAnswered,totalQuestions)}}}),Vue.component("progress-panel",{props:["rightData","progressData"],data:function(){return{submitStatus:!1,curGroup:!0,totalAnserwed:0,totalQuestions:0,totalPercentage:0}},template:"<div class='progress-panel'>\n        <div class='progress-panel-inner'>\n            <div class='progress'>\n                <div class='perc-data'>\n                    <span v-html='progressData.answerTxt'>Answered</span> <span v-html='this.totalAnserwed'>1</span> <span v-html='progressData.of'>of</span> <span v-html='this.totalQuestions'>12</span> <span>(</span><span v-html='this.totalPercentage'>12</span><span>%</span><span>)</span>\n                </div>\n                <div class='progress-bar'>\n                    <div id=\"myProgress\">\n                        <div id=\"myBar\" :style=\"{ width: this.totalPercentage+'%'}\"></div>\n                    </div>\n                </div>\n            </div>\n            <div class='btn-outer' style=\"display:none\">\n            \x3c!--save--\x3e\n              <div class='btn-item frw' v-if=\"this.curGroup==false\" v-html='progressData.groupTxt' @click=\"groupit()\">Save</div>\n              <div class='btn-item frw' v-if=\"this.curGroup==true\" v-html='progressData.unGroupTxt' @click=\"ungroupit()\">Save</div>\n              <div class='btn-item frw' :class=\"rightData.readdOnly == true ? 'disable':'null'\" v-html='progressData.saveTxt' @click=savePage>Save</div>\n              \x3c!--save--\x3e\n              \x3c!--submit--\x3e\n              <div class='btn-item frw submit-hide' :class=\"this.submitStatus == false ? 'disable':'null'\" @click=checkSubmitStatus(this.submitStatus) v-html='progressData.submitTxt' >Submit</div>\n              \x3c!--submit--\x3e\n            </div>\n        </div>\n    </div>",mounted:function(){},methods:{nextPage:function(forwardBtnVal){document.getElementById("left-panel-menu-slctn").value=forwardBtnVal,document.getElementById("left-panel-subMenu-slctn").value=forwardBtnVal,document.getElementById("forwardbutton").click()},savePage:function(){this.$parent.setScrollHeight(),document.getElementById("forwardbutton").click()},updateProgresbar:function(totalAnswered,totalQuestions){this.totalAnserwed=totalAnswered,this.totalQuestions=totalQuestions;var percentage=parseInt(totalAnswered/totalQuestions*100);this.totalPercentage=percentage,this.$parent.updateSubmitinFooter(totalAnswered,totalQuestions)},enabDisSubmit:function(endis){this.submitStatus="enable"==endis},checkSubmitStatus:function(submitStatus){0!=submitStatus&&this.nextPage(this.progressData.submitVal)},ungroupit:function(){this.$parent.ungroupQuestions()},groupit:function(){this.$parent.groupQuestions()},udpdateGroupInfo:function(grouped){this.curGroup=grouped}}});